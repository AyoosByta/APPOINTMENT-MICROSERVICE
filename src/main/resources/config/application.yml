eureka:
  client:
    enabled: true
    healthcheck:
      enabled: true
    fetch-registry: true
    register-with-eureka: true
    instance-info-replication-interval-seconds: 10
    registry-fetch-interval-seconds: 10
  instance:
    appname: ayoosappointment
    instanceId: ayoosappointment:${spring.application.instance-id:${random.value}}
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10
    status-page-url-path: ${management.endpoints.web.base-path}/info
    health-check-url-path: ${management.endpoints.web.base-path}/health
    metadata-map:
      zone: primary
      profile: ${spring.profiles.active}
      version: ${info.project.version:}
      git-version: ${git.commit.id.describe:}
      git-commit: ${git.commit.id.abbrev:}
      git-branch: ${git.branch:}
ribbon:
  eureka:
    enabled: false
feign:
  hystrix:
    enabled: false
hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE
  shareSecurityContext: true
management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include:
        - configprops
        - env
        - health
        - info
        - threaddump
        - logfile
  endpoint:
    health:
      show-details: when-authorized
  info:
    git:
      mode: full
  health:
    mail:
      enabled: false
  metrics:
    enabled: false
spring:
  autoconfigure:
    exclude: org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration,org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchAutoConfiguration,org.springframework.boot.autoconfigure.data.elasticsearch.ElasticsearchDataAutoConfiguration
  application:
    name: AyoosAppointment
  jpa:
    open-in-view: false
    properties:
      hibernate.jdbc.time_zone: UTC
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
  messages:
    basename: i18n/messages
  mvc:
    favicon:
      enabled: false
  thymeleaf:
    mode: HTML
security:
  oauth2:
    client:
      access-token-uri: http://35.196.86.249:8080/auth/realms/ayoos/protocol/openid-connect/token
      user-authorization-uri: http://35.196.86.249:8080/auth/realms/ayoos/protocol/openid-connect/auth
      client-id: account
      client-secret: 622ccedd-b819-4512-8e43-ee9837088a48
      scope: openid profile email
    resource:
      user-info-uri: http://35.196.86.249:8080/auth/realms/ayoos/protocol/openid-connect/userinfo
server:
  servlet:
    session:
      cookie:
        http-only: true
info:
  display-ribbon-on-profiles: dev
jhipster:
  async:
    core-pool-size: 2
    max-pool-size: 50
    queue-capacity: 10000
  mail:
    from: AyoosAppointment@localhost
  swagger:
    default-include-pattern: /api/.*
    title: AyoosAppointment API
    description: AyoosAppointment API documentation
    version: 0.0.1
    terms-of-service-url: null
    contact-name: null
    contact-url: null
    contact-email: null
    license: null
    license-url: null
bpm:
  url: http://35.231.249.189:8070/activiti-rest/service
  security:
    basicAuth:
      username: kermit
      password: kermit